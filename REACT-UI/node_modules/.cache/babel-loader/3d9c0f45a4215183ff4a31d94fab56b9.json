{"ast":null,"code":"import _taggedTemplateLiteral from\"/home/jm/Documents/DEV/react_flask_app/REACT-UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject2(){var data=_taggedTemplateLiteral([\"\\n     width: 100%;\\n    height: auto;\\n    overflow: hidden;\\n    padding-bottom: 1em\\n\"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral([\"\\n    width: 100%;\\n    height: auto;\\n    overflow: hidden;\\n    padding-bottom: 1em;\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React,{Component,useEffect,useState}from'react';import styled,{css}from'styled-components';var Container=styled.div(_templateObject());var Vid=styled.video(_templateObject2());var p,s;var Video=function Video(props){return/*#__PURE__*/React.createElement(Container,null,props.video.map(function(v,index){if(v.poster){p=v.poster;}else if(v.source){s=v.source;}}),/*#__PURE__*/React.createElement(Vid,{preload:\"none\",controls:\"play/pause\",loop:\"loop\",autoplay:\"autoplay\",poster:\"https://react-flask-app.s3-us-west-2.amazonaws.com\"+p},/*#__PURE__*/React.createElement(\"source\",{src:\"https://react-flask-app.s3-us-west-2.amazonaws.com\"+s,type:\"video/mp4\"})));};export default Video;","map":{"version":3,"sources":["/home/jm/Documents/DEV/react_flask_app/REACT-UI/src/components/Video.js"],"names":["React","Component","useEffect","useState","styled","css","Container","div","Vid","video","p","s","Video","props","map","v","index","poster","source"],"mappings":"unBAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,CAA0BC,SAA1B,CAAqCC,QAArC,KAAoD,OAApD,CACA,MAAOC,CAAAA,MAAP,EAAgBC,GAAhB,KAA0B,mBAA1B,CAEA,GAAMC,CAAAA,SAAS,CAAGF,MAAM,CAACG,GAAV,mBAAf,CAMA,GAAMC,CAAAA,GAAG,CAAGJ,MAAM,CAACK,KAAV,oBAAT,CAMA,GAAIC,CAAAA,CAAJ,CAAOC,CAAP,CACA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACC,KAAD,qBACV,oBAAC,SAAD,MACKA,KAAK,CAACJ,KAAN,CAAYK,GAAZ,CAAgB,SAACC,CAAD,CAAIC,KAAJ,CAAY,CACzB,GAAGD,CAAC,CAACE,MAAL,CAAY,CACRP,CAAC,CAAGK,CAAC,CAACE,MAAN,CACH,CAFD,IAEM,IAAGF,CAAC,CAACG,MAAL,CAAY,CACdP,CAAC,CAACI,CAAC,CAACG,MAAJ,CACH,CACJ,CANA,CADL,cAQI,oBAAC,GAAD,EAAK,OAAO,CAAC,MAAb,CAAoB,QAAQ,CAAC,YAA7B,CACO,IAAI,CAAC,MADZ,CACmB,QAAQ,CAAC,UAD5B,CACuC,MAAM,CAAE,qDAAqDR,CADpG,eAEI,8BAAQ,GAAG,CAAE,qDAAqDC,CAAlE,CAAqE,IAAI,CAAC,WAA1E,EAFJ,CARJ,CADU,EAAd,CAgBA,cAAeC,CAAAA,KAAf","sourcesContent":["import React, {Component, useEffect, useState} from 'react';\nimport styled, {css} from 'styled-components';\n\nconst Container = styled.div`\n    width: 100%;\n    height: auto;\n    overflow: hidden;\n    padding-bottom: 1em;\n`;\nconst Vid = styled.video`\n     width: 100%;\n    height: auto;\n    overflow: hidden;\n    padding-bottom: 1em\n`;\nvar p, s;\nconst Video = (props) =>(\n    <Container>\n        {props.video.map((v, index)=>{\n            if(v.poster){\n                p = v.poster;\n            }else if(v.source){\n                s=v.source;\n            }\n        })}\n        <Vid preload=\"none\" controls=\"play/pause\"\n               loop='loop' autoplay=\"autoplay\" poster={\"https://react-flask-app.s3-us-west-2.amazonaws.com\"+p}>\n            <source src={\"https://react-flask-app.s3-us-west-2.amazonaws.com\"+s} type=\"video/mp4\"/>\n        </Vid>\n    </Container>\n)\n\nexport default Video;"]},"metadata":{},"sourceType":"module"}