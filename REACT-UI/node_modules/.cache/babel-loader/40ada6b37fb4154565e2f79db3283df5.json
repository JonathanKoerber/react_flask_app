{"ast":null,"code":"var _jsxFileName = \"/home/jm/Documents/DEV/react_flask_app/REACT-UI/src/components/Gallery.js\";\nimport React, { Component, useEffect, useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport Project from \"./Project\";\nconst Figure = styled.figure`\n    margin: 0;\n    padding: 0;\n     display: flex;\n    flex-flow: row wrap;\n\n`;\nconst Row = styled.div`\n    padding: 0;\n    margin: 0;\n    display: flex;\n    flex-direction: column;\n@media only screen and (min-width: 992px){\n    display: flex;\n    flex-direction: row;\n    }\n`;\n\nfunction Gallery() {\n  const [projects, setProjects] = useState([]);\n  useEffect(() => {\n    loadData(); //    fetch('/gallery').then(res => res.json()).then(data =>{\n    //        setProjects(data.gallery)\n    // }).catch(function(err){\n    //   console.log(err)\n    // })\n  }, []);\n\n  const loadData = async () => {\n    const res = await fetch('/gallery');\n    const data = await res.json();\n    projects.push(data.gallery);\n    console.log(data.gallery);\n  };\n\n  var elements = []; //     for(let p in projects){\n  //         elements.push(projects[p].toString());\n  //         // elements.push(\"<Project project_title={p.title} project_image={p.image}/>\")\n\n  for (let p in projects) {\n    if (Array.isArray(p)) {\n      elements.push(p.toString());\n      elements.push('Project is array');\n    } else {\n      elements.push(p);\n      elements.push('Project is not an array');\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(Figure, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  }, elements);\n}\n\nexport default Gallery;","map":{"version":3,"sources":["/home/jm/Documents/DEV/react_flask_app/REACT-UI/src/components/Gallery.js"],"names":["React","Component","useEffect","useState","styled","css","Project","Figure","figure","Row","div","Gallery","projects","setProjects","loadData","res","fetch","data","json","push","gallery","console","log","elements","p","Array","isArray","toString"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,SAA1B,EAAqCC,QAArC,QAAoD,OAApD;AACA,OAAOC,MAAP,IAAgBC,GAAhB,QAA0B,mBAA1B;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,MAAMC,MAAM,GAAGH,MAAM,CAACI,MAAO;;;;;;CAA7B;AAOA,MAAMC,GAAG,GAAGL,MAAM,CAACM,GAAI;;;;;;;;;CAAvB;;AAWA,SAASC,OAAT,GAAmB;AACf,QAAM,CAACC,QAAD,EAAYC,WAAZ,IAA2BV,QAAQ,CAAC,EAAD,CAAzC;AACAD,EAAAA,SAAS,CAAC,MAAK;AACXY,IAAAA,QAAQ,GADG,CAEd;AACA;AACA;AACA;AACA;AACD,GAPS,EAOP,EAPO,CAAT;;AAQA,QAAMA,QAAQ,GAAG,YAAY;AACzB,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,UAAD,CAAvB;AACA,UAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACAN,IAAAA,QAAQ,CAACO,IAAT,CAAcF,IAAI,CAACG,OAAnB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,IAAI,CAACG,OAAjB;AACH,GALD;;AAMJ,MAAIG,QAAQ,GAAG,EAAf,CAhBmB,CAiBnB;AACA;AACA;;AAGI,OAAI,IAAIC,CAAR,IAAaZ,QAAb,EAAsB;AAElB,QAAGa,KAAK,CAACC,OAAN,CAAcF,CAAd,CAAH,EAAoB;AAChBD,MAAAA,QAAQ,CAACJ,IAAT,CAAcK,CAAC,CAACG,QAAF,EAAd;AACJJ,MAAAA,QAAQ,CAACJ,IAAT,CAAc,kBAAd;AAGC,KALD,MAMA;AACII,MAAAA,QAAQ,CAACJ,IAAT,CAAcK,CAAd;AACAD,MAAAA,QAAQ,CAACJ,IAAT,CAAc,yBAAd;AACH;AACJ;;AACC,sBACQ,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKI,QADL,CADR;AAQL;;AAID,eAAeZ,OAAf","sourcesContent":["import React, {Component, useEffect, useState} from 'react';\nimport styled, {css} from 'styled-components';\nimport Project from \"./Project\";\n\nconst Figure = styled.figure`\n    margin: 0;\n    padding: 0;\n     display: flex;\n    flex-flow: row wrap;\n\n`;\nconst Row = styled.div`\n    padding: 0;\n    margin: 0;\n    display: flex;\n    flex-direction: column;\n@media only screen and (min-width: 992px){\n    display: flex;\n    flex-direction: row;\n    }\n`;\n\nfunction Gallery() {\n    const [projects , setProjects] = useState([]);\n    useEffect(()=> {\n        loadData();\n     //    fetch('/gallery').then(res => res.json()).then(data =>{\n     //        setProjects(data.gallery)\n     // }).catch(function(err){\n     //   console.log(err)\n     // })\n   }, []);\n    const loadData = async () => {\n        const res = await fetch('/gallery');\n        const data = await res.json();\n        projects.push(data.gallery);\n        console.log(data.gallery);\n    }\nvar elements = []\n//     for(let p in projects){\n//         elements.push(projects[p].toString());\n//         // elements.push(\"<Project project_title={p.title} project_image={p.image}/>\")\n\n\n    for(let p in projects){\n\n        if(Array.isArray(p)){\n            elements.push(p.toString());\n        elements.push('Project is array');\n\n\n        }else\n        {\n            elements.push(p);\n            elements.push('Project is not an array')\n        }\n    }\n      return (\n              <Figure>\n                  {elements}\n                  {/*{projects.map((p, id)=> (*/}\n                  {/*    <Project key={id}project_title={p.projects.title} project_img={p.projectsimage}/>*/}\n                  {/*))}*/}\n              </Figure>\n      );\n}\n\n\n\nexport default Gallery;\n"]},"metadata":{},"sourceType":"module"}