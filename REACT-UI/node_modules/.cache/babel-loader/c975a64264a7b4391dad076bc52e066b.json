{"ast":null,"code":"var _jsxFileName = \"/home/jm/Documents/DEV/react_flask_app/REACT-UI/src/components/Gallery.js\";\nimport React, { Component, useEffect, useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport Project from \"./Project\";\nconst Figure = styled.figure`\n    margin: 0;\n    padding: 0;\n     display: flex;\n    flex-flow: row wrap;\n\n`;\nconst Row = styled.div`\n    padding: 0;\n    margin: 0;\n    display: flex;\n    flex-direction: column;\n@media only screen and (min-width: 992px){\n    display: flex;\n    flex-direction: row;\n    }\n`;\n\nfunction Gallery() {\n  const [projects, setProjects] = useState([]);\n  useEffect(() => {\n    loadData(); //    fetch('/gallery').then(res => res.json()).then(data =>{\n    //        setProjects(data.gallery)\n    // }).catch(function(err){\n    //   console.log(err)\n    // })\n  }, []);\n\n  const loadData = async () => {\n    const res = await fetch('/gallery');\n    const data = await res.json();\n    setProjects(data.gallery);\n    console.log(data.gallery);\n  };\n\n  var elements = []; //     for(let p in projects){\n  //         elements.push(projects[p].toString());\n  //         // elements.push(\"<Project project_title={p.title} project_image={p.image}/>\")\n\n  function getType(p) {\n    if (Array.isArray(p)) return 'array';else if (typeof p == 'string') return 'string';else if (p != null && typeof p == 'object') return 'object';else return 'other';\n  }\n\n  elements.push(porjects.json);\n\n  for (let p in projects) {\n    elements.push(getType(p));\n  }\n\n  return /*#__PURE__*/React.createElement(Figure, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }\n  }, elements);\n}\n\nexport default Gallery;","map":{"version":3,"sources":["/home/jm/Documents/DEV/react_flask_app/REACT-UI/src/components/Gallery.js"],"names":["React","Component","useEffect","useState","styled","css","Project","Figure","figure","Row","div","Gallery","projects","setProjects","loadData","res","fetch","data","json","gallery","console","log","elements","getType","p","Array","isArray","push","porjects"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,SAA1B,EAAqCC,QAArC,QAAoD,OAApD;AACA,OAAOC,MAAP,IAAgBC,GAAhB,QAA0B,mBAA1B;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,MAAMC,MAAM,GAAGH,MAAM,CAACI,MAAO;;;;;;CAA7B;AAOA,MAAMC,GAAG,GAAGL,MAAM,CAACM,GAAI;;;;;;;;;CAAvB;;AAWA,SAASC,OAAT,GAAmB;AACf,QAAM,CAACC,QAAD,EAAYC,WAAZ,IAA2BV,QAAQ,CAAC,EAAD,CAAzC;AACAD,EAAAA,SAAS,CAAC,MAAK;AACXY,IAAAA,QAAQ,GADG,CAEd;AACA;AACA;AACA;AACA;AACD,GAPS,EAOP,EAPO,CAAT;;AAQA,QAAMA,QAAQ,GAAG,YAAY;AACzB,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,UAAD,CAAvB;AACA,UAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACAL,IAAAA,WAAW,CAACI,IAAI,CAACE,OAAN,CAAX;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAI,CAACE,OAAjB;AACH,GALD;;AAMJ,MAAIG,QAAQ,GAAG,EAAf,CAhBmB,CAiBnB;AACA;AACA;;AACA,WAASC,OAAT,CAAiBC,CAAjB,EAAoB;AAChB,QAAIC,KAAK,CAACC,OAAN,CAAcF,CAAd,CAAJ,EAAsB,OAAO,OAAP,CAAtB,KACK,IAAI,OAAOA,CAAP,IAAY,QAAhB,EAA0B,OAAO,QAAP,CAA1B,KACA,IAAIA,CAAC,IAAI,IAAL,IAAa,OAAOA,CAAP,IAAY,QAA7B,EAAuC,OAAO,QAAP,CAAvC,KACA,OAAO,OAAP;AACR;;AACGF,EAAAA,QAAQ,CAACK,IAAT,CAAcC,QAAQ,CAACV,IAAvB;;AACA,OAAI,IAAIM,CAAR,IAAaZ,QAAb,EAAsB;AAClBU,IAAAA,QAAQ,CAACK,IAAT,CAAcJ,OAAO,CAACC,CAAD,CAArB;AACH;;AACC,sBACQ,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,QADL,CADR;AAQL;;AAID,eAAeX,OAAf","sourcesContent":["import React, {Component, useEffect, useState} from 'react';\nimport styled, {css} from 'styled-components';\nimport Project from \"./Project\";\n\nconst Figure = styled.figure`\n    margin: 0;\n    padding: 0;\n     display: flex;\n    flex-flow: row wrap;\n\n`;\nconst Row = styled.div`\n    padding: 0;\n    margin: 0;\n    display: flex;\n    flex-direction: column;\n@media only screen and (min-width: 992px){\n    display: flex;\n    flex-direction: row;\n    }\n`;\n\nfunction Gallery() {\n    const [projects , setProjects] = useState([]);\n    useEffect(()=> {\n        loadData();\n     //    fetch('/gallery').then(res => res.json()).then(data =>{\n     //        setProjects(data.gallery)\n     // }).catch(function(err){\n     //   console.log(err)\n     // })\n   }, []);\n    const loadData = async () => {\n        const res = await fetch('/gallery');\n        const data = await res.json();\n        setProjects(data.gallery);\n        console.log(data.gallery);\n    }\nvar elements = []\n//     for(let p in projects){\n//         elements.push(projects[p].toString());\n//         // elements.push(\"<Project project_title={p.title} project_image={p.image}/>\")\nfunction getType(p) {\n    if (Array.isArray(p)) return 'array';\n    else if (typeof p == 'string') return 'string';\n    else if (p != null && typeof p == 'object') return 'object';\n    else return 'other';\n}\n    elements.push(porjects.json)\n    for(let p in projects){\n        elements.push(getType(p))\n    }\n      return (\n              <Figure>\n                  {elements}\n                  {/*{projects.map((p, id)=> (*/}\n                  {/*    <Project key={id}project_title={p.projects.title} project_img={p.projectsimage}/>*/}\n                  {/*))}*/}\n              </Figure>\n      );\n}\n\n\n\nexport default Gallery;\n"]},"metadata":{},"sourceType":"module"}